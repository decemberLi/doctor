def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
def buildVersionCode = localProperties.getProperty('build.versionCode')
if (buildVersionCode == null) {
    buildVersionCode = '1'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 29
    buildToolsVersion '30.0.2'

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
        }
        qa {
            res.srcDirs += 'src/qa'
        }
        production {
            res.srcDirs += 'src/production'
        }
    }

    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
        pickFirst 'lib/armeabi-v7a/libopencv_world.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.emedclouds.doctor"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode buildVersionCode.toInteger()
        versionName '2.4.18'

    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro'
            signingConfig signingConfigs.debug
            ndk {
                abiFilters "armeabi-v7a"
            }

        }
    }

    flavorDimensions "env"
    productFlavors {
        qa {
            manifestPlaceholders = [
                    JPUSH_PKGNAME: defaultConfig.applicationId,
                    JPUSH_APPKEY : "05de7d1b7c21f44388f972b6",
                    JPUSH_CHANNEL: "default",
            ]
        }
        production {
            manifestPlaceholders = [
                    JPUSH_PKGNAME: defaultConfig.applicationId,
                    JPUSH_APPKEY : "602e4ea4245634138758a93c",
                    JPUSH_CHANNEL: "default",
            ]
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "droctor-${variant.flavorName}-${variant.buildType.name}-v${versionName}-${versionCode}.apk"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.core:core:$core_version"
    implementation "androidx.core:core-ktx:$core_version"

    implementation "androidx.annotation:annotation:$androidx_annotation_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_appcompat_version"
    implementation "androidx.activity:activity-ktx:$androidx_appcompat_version"

    api "androidx.camera:camera-camera2:$camerax_version"
    api "androidx.camera:camera-lifecycle:$camerax_version"
    api "androidx.camera:camera-view:1.0.0-alpha14"

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // WeChat share
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.1.6'
    // bugly
    implementation "com.tencent.bugly:crashreport:$bugly_version"
    implementation "com.tencent.bugly:nativecrashreport:$bugly_native_sdk_version"
    // umeng 统计
    implementation "com.umeng.umsdk:common:9.4.0"
    implementation "com.umeng.umsdk:asms:1.2.3"
    implementation "com.umeng.umsdk:apm:1.4.0"
    // push
    implementation 'cn.jiguang.sdk:jpush:3.8.6'
    implementation 'cn.jiguang.sdk:jcore:2.6.0'
    // apache io package
    api 'commons-io:commons-io:2.8.0'
//    api 'com.github.barteksc:pdfium-android:1.9.0'
    implementation("com.google.guava:guava:30.1-android")

    api 'com.kaopiz:kprogresshud:1.0.2'
    api 'com.tencent.tbs.tbssdk:sdk:43903'

    implementation 'androidx.webkit:webkit:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    api 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    // OCR
    implementation files('libs/OcrSDKv1.0.5-release.aar')
    // OCR SDK 依赖 xlog 组件需要添加引用
    implementation 'com.tencent.mars:mars-xlog:1.2.3'
    // OCR SDK 返回实体对象需要的依赖
    implementation 'com.google.code.gson:gson:2.8.5'

    api 'com.leon.channel:helper:2.0.3'

    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation files('libs/matisse-0.5.2.aar')
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation 'it.sephiroth.android.library.imagezoom:library:1.0.4'

    // 注解
//    implementation "com.google.dagger:dagger:2.30.1"
//    kapt "com.google.dagger:dagger-compiler:2.30.1"
}
